package ${basePackage}${currentPackage};

import ${basePackage}.common.frame.web.model.R;
import ${basePackage}.common.utils.ServletUtils;
import com.alibaba.fastjson.JSON;
import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletResponse;
import java.io.PrintWriter;

import static ${basePackage}.common.utils.ServletUtils.getResponse;

/**
 * <br>
 *
 * @author ${author}
 * @since ${date}
 */
public class LoginFilter extends FormAuthenticationFilter
{
    private static Logger log = LoggerFactory.getLogger(LoginFilter.class);

    @Override
    protected boolean preHandle(ServletRequest request, ServletResponse response) throws Exception
    {
        return super.preHandle(request, response);
    }

    @Override
    protected boolean onAccessDenied(ServletRequest request, ServletResponse response) throws Exception
    {

        // 判断是否是未登录被拦截后的那个登录页面跳转
        if (this.isLoginRequest(request, response))
        {
            if (this.isLoginSubmission(request, response))
            {
                if (log.isTraceEnabled())
                {
                    log.info("$$$$$$  检测到登录提交。正在尝试执行登录");
                }
                return this.executeLogin(request, response);
            }
            else
            {
                // 未登录 会进入这里跳转到指定登录的页面
                log.error("$$$$$$$$ 拦截未登录的请求-=>" + ServletUtils.getRequest().getRequestURI());
                out(R.error(401, "您未登录，请先登录！"));
                return false;
            }
        }
        else
        {
            if (log.isTraceEnabled())
            {
                log.info("$$$$$$$ 正在尝试访问需要身份验证的路径。转发到身份验证URL [" + this.getLoginUrl() + "]");
            }
            log.error("$$$$$$$$ 拦截未登录的请求-=> " + ServletUtils.getRequest().getRequestURI());
            out(R.error(401, "您未登录，请先登录！"));
            return false;
        }
    }

    private void out(R r)
    {
        PrintWriter out = null;
        try
        {
            HttpServletResponse response = getResponse();
            //设置编码
            response.setCharacterEncoding("UTF-8");
            //设置返回类型
            response.setContentType("application/json");
            out = response.getWriter();
            //输出
            response.getWriter().write(JSON.toJSONString(r));
        } catch (Exception e)
        {
            e.printStackTrace();
        } finally
        {
            out.flush();
            out.close();
        }
    }

}
